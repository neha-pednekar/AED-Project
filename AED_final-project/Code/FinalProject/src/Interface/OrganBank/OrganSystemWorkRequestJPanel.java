/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.OrganBank;

import Business.Deceased;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.OrganBankOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.OrganBankWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chintan
 */
public class OrganSystemWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrganSystemWorkRequestJPanel
     */
    private JPanel userProcessContainer;
    private OrganBankOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    public OrganSystemWorkRequestJPanel(JPanel userProcessContainer, UserAccount account, OrganBankOrganization organization, Enterprise enterprise,EcoSystem business){
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        populateTable();
        populateUserTable();
    }
    
    public void populateUserTable()
    {
        DefaultTableModel model = (DefaultTableModel)tbl_userRequest.getModel();
        model.setRowCount(0);
        for(WorkRequest request : userAccount.getWorkQueue().getWorkRequestList())
        {
            Object[] row = new Object[9];
            row[0] = request.getDonar().getDonarID();
            row[1] = request.getAge();
            row[2] = request.getHospitalName();
            row[3] = request.getSender();
            if(request.getLabName()==null)
            {
                row[4] = "";
                row[5] = "";
            }
            else
            {
                row[4] = request.getLabName();
                row[5] = request.getLabStatus();
            }
            row[6] = request.getObStatus();
            row[7] = request.getStatus();
            row[8] = request;
            model.addRow(row);
         }

    }
    
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)tbl_GovNotification.getModel();
        
        model.setRowCount(0);
        
        for(Deceased deceased : business.getDeceasedList())
        {
            if(!(deceased.isProcessed())){
                if (deceased.getDonar().isDonate())
                {
            Object[] row = new Object[4];
            row[0] = deceased;
            row[1] = deceased.getAge();
            row[2] = deceased.getHospitalName();
            row[3] = deceased.getDatetime();
            
            model.addRow(row);
            }
            }
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_GovNotification = new javax.swing.JTable();
        btn_Assign = new javax.swing.JButton();
        btn_processBody = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_userRequest = new javax.swing.JTable();
        btn_frwdAdmin = new javax.swing.JButton();

        tbl_GovNotification.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Person ID", "Age", "Hospital", "Died on"
            }
        ));
        jScrollPane1.setViewportView(tbl_GovNotification);
        if (tbl_GovNotification.getColumnModel().getColumnCount() > 0) {
            tbl_GovNotification.getColumnModel().getColumn(3).setHeaderValue("Died on");
        }

        btn_Assign.setText("Assign Me");
        btn_Assign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AssignActionPerformed(evt);
            }
        });

        btn_processBody.setText("Forward to Lab ");
        btn_processBody.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_processBodyActionPerformed(evt);
            }
        });

        tbl_userRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Person ID", "Age", "Hospital", "Sender", "Lab", "Lab Status", "Admin Status", "Status", "Message"
            }
        ));
        jScrollPane2.setViewportView(tbl_userRequest);

        btn_frwdAdmin.setText("Forward to Admin ");
        btn_frwdAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_frwdAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btn_processBody, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_frwdAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btn_Assign)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Assign)
                .addGap(104, 104, 104)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_processBody)
                .addGap(31, 31, 31)
                .addComponent(btn_frwdAdmin)
                .addContainerGap(129, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_GovNotification.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        Deceased deceased =(Deceased) tbl_GovNotification.getValueAt(selectedRow, 0);
        deceased.setOrganBankName(organization.getName());
        deceased.setProcessed(true);
        
        OrganBankWorkRequest organBankWorkRequest = new OrganBankWorkRequest();
        organBankWorkRequest.setDonar(deceased.getDonar());
        organBankWorkRequest.setSender(userAccount);
        organBankWorkRequest.setHospitalName(deceased.getHospitalName());
        organBankWorkRequest.setStatus("with OrganBank");
        organBankWorkRequest.setType("ogdiener");
        organBankWorkRequest.setAge(deceased.getAge());
        organBankWorkRequest.setMessage("Will take the body to lab for organ test");
        
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof OrganBankOrganization){
                org = organization;
                break;
            }
        }
 

        if (org!=null){
            //org.getWorkQueue().getWorkRequestList().add(organBankWorkRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(organBankWorkRequest);
            //JOptionPane.showMessageDialog(null,"Request has been assigned");
        }
        
        populateTable();
        populateUserTable();
    }//GEN-LAST:event_btn_AssignActionPerformed

    private void btn_processBodyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_processBodyActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_userRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        OrganBankWorkRequest request = (OrganBankWorkRequest) tbl_userRequest.getValueAt(selectedRow,8);
        if(!(request.getLabName()==null))
        {
            if(request.getLabStatus().equalsIgnoreCase("pending"))
            {
                JOptionPane.showMessageDialog(null, request.getLabName()+" is already testing the organ");
                return;
            }
            else if (request.getLabStatus().equalsIgnoreCase("completed"))
            {
                JOptionPane.showMessageDialog(null, "Body already processed ");
                return;
            }
        }
        else
        {
            AssignLabJPanel assignLabJPanel = new AssignLabJPanel(userProcessContainer, userAccount, organization, enterprise, business, request);
            userProcessContainer.add("AssignLabJPanel", assignLabJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_btn_processBodyActionPerformed

    private void btn_frwdAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_frwdAdminActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_userRequest.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
         OrganBankWorkRequest request = (OrganBankWorkRequest) tbl_userRequest.getValueAt(selectedRow,8);
         if(request.getLabStatus().equalsIgnoreCase("completed") && request.getObStatus()==null)
         {
             request.setObStatus("Sent to Organ bank admin");
             request.setMessage("Please add the organs");
             organization.getWorkQueue().getWorkRequestList().add(request);
             JOptionPane.showMessageDialog(null, "Request forwarded to Admin");
             populateUserTable();
             
         }
         else if(request.getObStatus()!=null)
         {
             JOptionPane.showMessageDialog(null, "Request already placed");
             return;
         }
         else if(!request.getLabStatus().equalsIgnoreCase("completed"))
         {
             JOptionPane.showMessageDialog(null, "Lab testing pending");
             return;
         }
        
    }//GEN-LAST:event_btn_frwdAdminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Assign;
    private javax.swing.JButton btn_frwdAdmin;
    private javax.swing.JButton btn_processBody;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_GovNotification;
    private javax.swing.JTable tbl_userRequest;
    // End of variables declaration//GEN-END:variables
}
