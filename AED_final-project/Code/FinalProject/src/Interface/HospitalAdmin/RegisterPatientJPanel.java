/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.HospitalAdmin;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.HelperMethod.HelperMethod;
import Business.Hospital.Patient;
import Business.Organization.HospitalOrganization;
import Business.RegisterDonar.Donar;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Neha Pednekar
 */
public class RegisterPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegisterPatientJPanel
     */
    private JPanel userProcessContainer;
    private HospitalOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    
    public RegisterPatientJPanel(JPanel userProcessContainer, UserAccount account, HospitalOrganization organization, Enterprise enterprise,
            EcoSystem business){
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business = business;
        disableFeilds();
    }
     public void disableFeilds()
     {
         txt_name.setEditable(false);
         txt_Year.setEditable(false);
         txt_address.setEditable(false);
         txt_zipcode.setEditable(false);
         txt_contactNo.setEditable(false);
         cb_gender.setEditable(false);
         txt_emgContactNo.setEditable(false);
         rb_no.setEnabled(false);
         rb_yes.setEnabled(false);
     }
     
     public void enableFeilds()
     {
         txt_name.setEditable(true);
         txt_Year.setEditable(true);
         txt_address.setEditable(true);
         txt_zipcode.setEditable(true);
         txt_contactNo.setEditable(true);
         cb_gender.setEditable(true);
         txt_emgContactNo.setEditable(true);
         rb_no.setEnabled(true);
         rb_yes.setEnabled(true);
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtDonorID = new javax.swing.JTextField();
        btnRegisterPatient = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btn_getDetails = new javax.swing.JButton();
        cb_gender = new javax.swing.JComboBox<>();
        txt_address = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_zipcode = new javax.swing.JTextField();
        rb_yes = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        rb_no = new javax.swing.JRadioButton();
        txt_contactNo = new javax.swing.JTextField();
        txt_emgContactNo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_Year = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        jLabel2.setText("Person ID :");

        txtDonorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonorIDActionPerformed(evt);
            }
        });

        btnRegisterPatient.setText("Register Patient");
        btnRegisterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterPatientActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Register Patient Panel");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btn_getDetails.setText("Get Details");
        btn_getDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_getDetailsActionPerformed(evt);
            }
        });

        cb_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Others" }));

        jLabel8.setText("Address :");

        jLabel4.setText("Gender :");

        jLabel12.setText("Donate Organs :");

        rb_yes.setText("Yes");
        rb_yes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_yesActionPerformed(evt);
            }
        });

        jLabel5.setText("Contact no :");

        rb_no.setText("No");
        rb_no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_noActionPerformed(evt);
            }
        });

        jLabel1.setText("Name :");

        jLabel6.setText("ZipCode :");

        jLabel7.setText("Emergency Contact :");

        jLabel9.setText("Birth Year :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(163, 163, 163)
                                        .addComponent(btnRegisterPatient))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(rb_yes)
                                        .addGap(18, 18, 18)
                                        .addComponent(rb_no))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtDonorID)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_name)
                                            .addComponent(txt_address)
                                            .addComponent(txt_zipcode)
                                            .addComponent(cb_gender, javax.swing.GroupLayout.Alignment.TRAILING, 0, 133, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_contactNo)
                                            .addComponent(txt_emgContactNo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)))
                                    .addComponent(txt_Year))
                                .addGap(31, 31, 31)
                                .addComponent(btn_getDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDonorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_getDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txt_address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_zipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_contactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_emgContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(rb_yes)
                    .addComponent(rb_no))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegisterPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDonorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonorIDActionPerformed

    private void btnRegisterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterPatientActionPerformed
        // TODO add your handling code here:
        String donorID = txtDonorID.getText();
        if(donorID.equalsIgnoreCase(""))
        {
            try
            {
                boolean allFieldsAreValid = true;
                String name = "";
                String address = "";

                if(txt_name.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter Patient's Name");
                   allFieldsAreValid = false;
                }
                else
                {
                name = txt_name.getText();
                }

                int birthYear = 0;
                if(txt_Year.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter Birth Year");
                   allFieldsAreValid = false;
                }
                else
                {
                    if(HelperMethod.isNumeric(txt_Year.getText()))
                    {
                    birthYear = Integer.parseInt(txt_Year.getText());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter a valid birth year. The entered birth year is invalid.");
                        allFieldsAreValid = false;
                    }
                }

                String gender = String.valueOf(cb_gender.getSelectedItem());
                if(txt_address.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter Patient's Address");
                   allFieldsAreValid = false;
                }
                else
                {
                address = txt_address.getText();
                }

                int zipcode = 0;
                if(txt_zipcode.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter zip code");
                   allFieldsAreValid = false;
                }
                else
                {
                    if(HelperMethod.validateZipCode(txt_zipcode.getText()))
                    {
                    zipcode = Integer.parseInt(txt_zipcode.getText());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter a valid US zipcode. The entered zipcode is invalid.");
                        allFieldsAreValid = false;
                    }
                }

                String contactNo = "";
                if(txt_contactNo.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter a contact number");
                   allFieldsAreValid = false;
                }
                else
                {
                    if(HelperMethod.isNumeric(txt_contactNo.getText()))
                    {
                    contactNo = txt_contactNo.getText();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter a valid contact number. The entered contact number is invalid.");
                        allFieldsAreValid = false;
                    }
                }

                String emgContactNo= "";
                if(txt_contactNo.getText().isEmpty())
                {
                   JOptionPane.showMessageDialog(null, "Please enter an emergency contact number");
                   allFieldsAreValid = false;
                }
                else
                {
                    if(HelperMethod.isNumeric(txt_emgContactNo.getText()))
                    {
                    emgContactNo = txt_emgContactNo.getText();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Please enter a valid emergency contact number. The entered emergency contact number is invalid.");
                        allFieldsAreValid = false;
                    }
                }
                
                boolean donate = true;

                if(rb_yes.isSelected())
                {
                    donate = true;
                }
                if(rb_no.isSelected())
                {
                    donate = false;
                }

                        if(allFieldsAreValid)
                        {
                        Donar donar = business.addDonar();
                        donar.setName(name);
                        donar.setYear(birthYear);
                        donar.setGender(gender);
                        donar.setAddress(address);
                        donar.setContactNo(contactNo);
                        donar.setEmgContantno(emgContactNo);
                        donar.setDonate(donate);

                        Patient patient = organization.addPatient();
                        patient.setDonor(donar);
                        JOptionPane.showMessageDialog(null, "Patient was registered successfully with patient ID : " + patient.getPatientID());
                        }

                    }
                    catch(NumberFormatException ex)
                    {
                        JOptionPane.showMessageDialog(null, "PLease enter the values properly");
                    }

                }
                else
                {
                    for(Donar donor: business.getDonarList())
                    {
                        int dID = Integer.parseInt(txtDonorID.getText());
                        if(donor.getDonarID() == dID )
                        {
                            Patient patient = organization.addPatient();
                            patient.setDonor(donor);
                            JOptionPane.showMessageDialog(null, "Patient was registered successfully with patient ID : " + patient.getPatientID());
                            break;
                        }
                    }
                }
        
    }//GEN-LAST:event_btnRegisterPatientActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btn_getDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_getDetailsActionPerformed
        // TODO add your handling code here:
        boolean donorFound = false;
        for(Donar donor: business.getDonarList())
        {
            int donorID = Integer.parseInt(txtDonorID.getText());
            if(donor.getDonarID() == donorID )
            {
              if( donor.isDied() == false)
                {
                donorFound = true;
                
                txt_name.setText(donor.getName());
                txt_Year.setText(String.valueOf(donor.getYear()));
                txt_address.setText(donor.getAddress());
                txt_zipcode.setText(String.valueOf(donor.getZipCode()));
                txt_contactNo.setText(donor.getContactNo());
                txt_emgContactNo.setText(donor.getEmgContantno());
                cb_gender.setSelectedItem(donor.getGender());
                boolean donate = donor.isDonate();
                if(donate)
                rb_yes.setSelected(true);
                else
                    rb_no.setSelected(true);
                
                break;
            }
            else
            {
                JOptionPane.showMessageDialog(null, "The Person with ID : " +String.valueOf(donorID) + "is already died. Please enter proper ID");
                return;
            }
            }
        }
        
        if(!donorFound)
        {
            JOptionPane.showMessageDialog(null, "The Person ID does not exist. Please Register");
            enableFeilds();
            txtDonorID.setText("");
            txtDonorID.setEditable(false);
            btn_getDetails.setEnabled(false);
        }
    }//GEN-LAST:event_btn_getDetailsActionPerformed

    private void rb_yesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_yesActionPerformed
        // TODO add your handling code here:
        if(rb_yes.isSelected())
        {
            rb_no.setSelected(false);
        }
    }//GEN-LAST:event_rb_yesActionPerformed

    private void rb_noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_noActionPerformed
        // TODO add your handling code here:
        if(rb_no.isSelected())
        {
            rb_yes.setSelected(false);
        }
    }//GEN-LAST:event_rb_noActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegisterPatient;
    private javax.swing.JButton btn_getDetails;
    private javax.swing.JComboBox<String> cb_gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton rb_no;
    private javax.swing.JRadioButton rb_yes;
    private javax.swing.JTextField txtDonorID;
    private javax.swing.JTextField txt_Year;
    private javax.swing.JTextField txt_address;
    private javax.swing.JTextField txt_contactNo;
    private javax.swing.JTextField txt_emgContactNo;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_zipcode;
    // End of variables declaration//GEN-END:variables
}
